proc factorial(n: i32): i32 {
    printf("factorial\n");

    let res: i32 = 1;

    for let i: i32 = 2; i <= n; i += 1; {
        res *= i;
    }

    return res;
}

proc is_prime(n: i32): i32 {
    printf("is_prime\n");
    let flag: i32 = 1;

    for (let i: i32 = 2; i <= n/2; i += 1;) {
        if n % i == 0 {
            flag = 0;
            break;
        }
    }

    return flag;
}

proc fibonacci(n: i32): i32 {
    if n == 0 { return 0; }
    if n == 1 { return 1; }
    return fibonacci(n-1) + fibonacci(n-2);
}

proc main(void): i32 {
     if factorial(4) != 24 {
         exit(1);
     }

     if is_prime(13) != 1 {
         exit(1);
     }

     if is_prime(24) != 0 {
         exit(1);
     }

     printf("fibonacci 10\n");
     if fibonacci(10) != 55 {
         exit(1);
     }

     printf("fibonacci 40\n");
     if fibonacci(40) != 102334155 {
         exit(1);
     }

     return 0;
}

