proc streq(s1: str, s2: str): i32 {
    return strcmp(s1, s2) == 0;
}

proc strinit(void): str {
    -- printf("strinit\n");

    let s: str = "foo";
    return s;
}

proc str_as_param(s: str): str {
    -- printf("str_as_param\n");
    return s;
}

proc str_ref_as_param(s: str ref): str {
    -- printf("str_ref_as_param\n");
    return *s;
}

-- proc modify_str_ref(s: str ref): void {
--     printf("modify_str_ref\n");

--     s[0] = 'a';
--     s[1] = 'b';
--     s[2] = 'c';
-- }

export proc test_str(void): i32 {
    printf("test_str... ");

    let strinit: str = strinit();
    if streq(strinit, "foo") != 1 {
        printf("strinit failed\n");
        return 1;
    }

    let str_as_param: str = str_as_param("hello");
    if streq(str_as_param, "hello") != 1 {
        printf("str_as_param failed\n");
        return 1;
    }

    let str_ref_as_param': str = "world";
    let str_ref_as_param: str = str_ref_as_param(&str_ref_as_param');
    if streq(str_ref_as_param, "world") != 1 {
        printf("str_ref_as_param failed\n");
        return 1;
    }

    -- let modify_str_ref: str = "xyz";
    -- modify_str_ref(&modify_str_ref);
    -- if modify_str_ref[0] != 'a' || modify_str_ref[1] != 'b' || modify_str_ref[2] != 'c' {
    --     printf("str_ref_as_param failed\n");
    --     exit(1);
    -- }

    printf("ok\n");

    return 0;
}
