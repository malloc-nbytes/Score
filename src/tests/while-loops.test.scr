proc while_basic(void): i32 {
    -- printf("while_basic\n");

    let i: i32 = 0;
    while i < 10 { i += 1; }
    return i;
}

proc while_lessthan(void): i32 {
    -- printf("while_lessthan\n");

    let i: i32 = 0;
    let max: i32 = 100;
    while i < max { i += 1; }
    return i == max;
}

proc while_double_cond(void): i32 {
    -- printf("while_double_cond\n");

    let i: i32 = 0;
    let max: i32 = 20;
    while i < max && i < 10 {
        i += 1;
    }

    return i;
}

proc while_range_wparams(start: i32, max: i32): i32 {
    -- printf("while_range_wparams\n");
    while start < max {
        start += 1;
    }
    return start == max;
}

proc return_in_loop(void): i32 {
    -- printf("return_in_loop\n");

    let i: i32 = 0;
    while 1 {
        if i == 5 {
            return i;
        }
        i += 1;
    }

    return 0;
}

proc double_nested_loops(void): i32 {
    -- printf("double_nested_loops\n");

    let i: usize = 0;
    let j: usize = 0;
    let res: usize = 0;

    while i < 10 {
        while j < 10 {
            res += i+j;
            j += 1;
        }
        i += 1;
    }

    return res;
}

proc triple_nested_loops(void): i32 {
    -- printf("triple_nested_loops\n");

    let i: usize = 0;
    let j: usize = 0;
    let k: usize = 0;
    let res: usize = 0;

    while i < 10 {
        while j < 10 {
            while k < 10 {
                res += 1;
                k += 1;
            }
            j += 1;
            k = 0;
        }
        i += 1;
        j = 0;
    }

    return res;
}

proc big(void): i32 {
    -- printf("big\n");

    let res: i32 = 0;
    let i: i32 = 0;
    let j: i32 = 0;

    while i < 30000 {
        while j < 30000 {
            res += j;
            j += 1;
        }
        i += 1;
        j = 0;
    }

    return res;
}

export proc run_while_loops(void): i32 {
    if while_basic() != 10 {
        printf("while_basic failed\n");
        return 1;
    }

    if while_lessthan() != 1 {
        printf("while_lessthan failed\n");
        return 1;
    }

    if while_double_cond() != 10 {
        printf("while_double_cond failed\n");
        return 1;
    }

    if while_range_wparams(0, 1000) != 1 {
        printf("while_range_wparams failed\n");
        return 1;
    }

    if return_in_loop() != 5 {
        printf("return_in_loop failed\n");
        return 1;
    }

    if double_nested_loops() != 45 {
        printf("double_nested_loops failed\n");
        return 1;
    }

    if triple_nested_loops() != 1000 {
        printf("triple_nested_loops failed\n");
        return 1;
    }

    if big() != 467788672 {
        printf("big failed\n");
        return 1;
    }

    return 0;
}
