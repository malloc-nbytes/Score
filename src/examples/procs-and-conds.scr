import "std/std.scr";

proc fibonacci(n: usize): usize {
    if n == 0 || n == 1 {
        return n;
    }
    return fibonacci(n-1) + fibonacci(n-2);
}

-- Void procs do not need a return statement.
proc fizzbuzz(n: usize): void {
    for let i: usize = 1; i <= n; i += 1; {
        if i % 5 == 0 && i % 3 == 0 {
            printf("FizzBuzz\n");
        }
        else if i % 5 == 0 {
            printf("Fizz\n");
        }
        else if i % 3 == 0 {
            printf("Buzz\n");
        }
        else {
            printf("%d\n", i);
        }
    }
}

export proc main(void): i32 {
    fizzbuzz(101);

    let n: usize = 10;

    -- Variables can have the same
    -- name as procs.
    let fibonacci: usize = fibonacci(10);
    printf("fibonacci for %d = %d\n", n, fibonacci);

    return 0;
}
